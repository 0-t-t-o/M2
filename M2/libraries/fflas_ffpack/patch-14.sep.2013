--- fflas-ffpack/utils/debug.h	2013-09-14 23:14:51.000000000 +0200
+++ fflas-ffpack//utils/debug.h	2013-09-14 23:15:55.000000000 +0200
@@ -109,7 +109,8 @@ throw FFPACK::Failure (__func__, __FILE_
 
 namespace FFPACK {
 
-
+// anonymous namespace to prevent duplicate definition
+ namespace {
 	/*!  A precondtion failed.
 	 * @ingroup util
 	 * The \c throw mechanism is usually used here as in
@@ -229,6 +230,8 @@ namespace FFPACK {
 		return (bool)(int)fmod(a,2.);
 	}
 
+    } // end anonymous namespace to prevent duplicate definition
+
 } // FFPACK
 
 #endif // __FFLASFFPACK_util_debug_H

--- ffpack.h	2013-09-14 16:37:09.000000000 +0200
+++ fflas-ffpack/fflas-ffpack/ffpack/ffpack.h	2013-09-15 00:24:47.000000000 +0200
@@ -1693,7 +1693,7 @@ else { // Left NullSpace
 	}
 
 	template <class Field, class Polynomial>
-	std::list<Polynomial>&
+	static Polynomial &
 	CharPoly( const Field& F, Polynomial& charp, const size_t N,
 		  typename Field::Element * A, const size_t lda,
 		  const FFPACK_CHARPOLY_TAG CharpTag= FfpackArithProg)
@@ -1707,6 +1707,7 @@ else { // Left NullSpace
 		charp.resize(N+1);
 
 		Polynomial P = *(it++);
+		charp = P;
 		while( it!=factor_list.end() ){
 			mulpoly (F,charp, P, *it);
 			P = charp;

 


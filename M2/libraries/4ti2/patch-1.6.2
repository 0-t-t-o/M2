diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/config.sub 4ti2-1.6.2/config.sub
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/config.sub	2013-06-26 15:13:17.000000000 -0400
+++ 4ti2-1.6.2/config.sub	2015-05-03 13:28:37.206596226 -0400
@@ -2,7 +2,7 @@
 # Configuration validation subroutine script.
 #   Copyright 1992-2013 Free Software Foundation, Inc.
 
-timestamp='2013-04-24'
+timestamp='2013-08-10'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -257,7 +257,7 @@
 	| avr | avr32 \
 	| be32 | be64 \
 	| bfin \
-	| c4x | clipper \
+	| c4x | c8051 | clipper \
 	| d10v | d30v | dlx | dsp16xx \
 	| epiphany \
 	| fido | fr30 | frv \
@@ -372,7 +372,7 @@
 	| be32-* | be64-* \
 	| bfin-* | bs2000-* \
 	| c[123]* | c30-* | [cjt]90-* | c4x-* \
-	| clipper-* | craynv-* | cydra-* \
+	| c8051-* | clipper-* | craynv-* | cydra-* \
 	| d10v-* | d30v-* | dlx-* \
 	| elxsi-* \
 	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
@@ -794,7 +794,7 @@
 		os=-mingw64
 		;;
 	mingw32)
-		basic_machine=i386-pc
+		basic_machine=i686-pc
 		os=-mingw32
 		;;
 	mingw32ce)
@@ -830,7 +830,7 @@
 		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
 		;;
 	msys)
-		basic_machine=i386-pc
+		basic_machine=i686-pc
 		os=-msys
 		;;
 	mvs)
@@ -1546,6 +1546,9 @@
 	c4x-* | tic4x-*)
 		os=-coff
 		;;
+	c8051-*)
+		os=-elf
+		;;
 	hexagon-*)
 		os=-elf
 		;;
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/configure.ac 4ti2-1.6.2/configure.ac
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/configure.ac	2014-01-14 20:30:06.000000000 -0500
+++ 4ti2-1.6.2/configure.ac	2015-05-03 11:25:38.948635655 -0400
@@ -180,30 +180,83 @@
   CXXFLAGS="${CXXFLAGS} ${GMP_CFLAGS}"
   save_LIBS="${LIBS}"
   LIBS="${LIBS} ${GMP_LIBS}"
-  AC_MSG_CHECKING(whether we can convert between ${int32_t} and mpz_class)
+  AC_MSG_CHECKING(whether we can compile gmpxx.h)
   AC_TRY_LINK(
     [  #include <gmpxx.h>
        ${int32_t_int_64_t_include}
     ],
     [  ${int32_t} x = 815;
+       ${int64_t} w = 815;
+    ],
+    [AC_MSG_RESULT(yes)],
+    [AC_MSG_RESULT([no, *** warning!!!])]
+    )
+  AC_MSG_CHECKING(whether we can compile gmpxx.h with stddef.h)
+  AC_TRY_LINK(
+    [  #include <stddef.h>
+       #include <gmpxx.h>
+       ${int32_t_int_64_t_include}
+    ],
+    [  ${int32_t} x = 815;
+       ${int64_t} w = 815;
+    ],
+    [AC_MSG_RESULT(yes)],
+    [AC_MSG_RESULT(no)]
+    )
+  AC_MSG_CHECKING(whether we can convert from ${int32_t} to mpz_class)
+  AC_TRY_LINK(
+    [  #include <stddef.h>
+       #include <gmpxx.h>
+       ${int32_t_int_64_t_include}
+    ],
+    [  ${int32_t} x = 815;
        mpz_class y(x);
     ],
     [ HAVE_MPZ_INT32_CONVERSION=yes;
-      AC_DEFINE(_4ti2_HAVE_MPZ_INT32_CONVERSION, 1, [Define if we can convert between _4ti2_int32_t and mpz_class]) ],
+      AC_DEFINE(_4ti2_HAVE_MPZ_INT32_CONVERSION, 1, [Define if we can convert from _4ti2_int32_t to mpz_class]) ],
     [ HAVE_MPZ_INT32_CONVERSION=no ])
   AC_MSG_RESULT(${HAVE_MPZ_INT32_CONVERSION})
-  AC_MSG_CHECKING(whether we can convert between ${int64_t} and mpz_class)
+  AC_MSG_CHECKING(whether we can convert from ${int64_t} to mpz_class)
   AC_TRY_LINK(
-    [  #include <gmpxx.h>
+    [  #include <stddef.h>
+       #include <gmpxx.h>
        ${int32_t_int_64_t_include}
     ],
     [  ${int64_t} x = 815;
        mpz_class y(x);
     ],
     [ HAVE_MPZ_INT64_CONVERSION=yes;
-      AC_DEFINE(_4ti2_HAVE_MPZ_INT64_CONVERSION, 1, [Define if we can convert between _4ti2_int64_t and mpz_class]) ],
+      AC_DEFINE(_4ti2_HAVE_MPZ_INT64_CONVERSION, 1, [Define if we can convert from _4ti2_int64_t to mpz_class]) ],
     [ HAVE_MPZ_INT64_CONVERSION=no ])
   AC_MSG_RESULT(${HAVE_MPZ_INT64_CONVERSION})
+  AC_MSG_CHECKING(whether we can convert to ${int32_t} from mpz_class)
+  AC_TRY_LINK(
+    [  #include <stddef.h>
+       #include <gmpxx.h>
+       ${int32_t_int_64_t_include}
+    ],
+    [  mpz_class y(0);
+       ${int32_t} i;
+       i = y;
+    ],
+    [ HAVE_INT32_MPZ_CONVERSION=yes;
+      AC_DEFINE(_4ti2_HAVE_INT32_MPZ_CONVERSION, 1, [Define if we can convert to _4ti2_int32_t from mpz_class]) ],
+    [ HAVE_INT32_MPZ_CONVERSION=no ])
+  AC_MSG_RESULT(${HAVE_INT32_MPZ_CONVERSION})
+  AC_MSG_CHECKING(whether we can convert to ${int64_t} from mpz_class)
+  AC_TRY_LINK(
+    [  #include <stddef.h>
+       #include <gmpxx.h>
+       ${int32_t_int_64_t_include}
+    ],
+    [  mpz_class y(0);
+       ${int64_t} i;
+       i = y;
+    ],
+    [ HAVE_INT64_MPZ_CONVERSION=yes;
+      AC_DEFINE(_4ti2_HAVE_INT64_MPZ_CONVERSION, 1, [Define if we can convert to _4ti2_int64_t from mpz_class]) ],
+    [ HAVE_INT64_MPZ_CONVERSION=no ])
+  AC_MSG_RESULT(${HAVE_INT64_MPZ_CONVERSION})
   LIBS="${save_LIBS}"
   CXXFLAGS="${save_CXXFLAGS}"
 fi
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/m4/glpk-check.m4 4ti2-1.6.2/m4/glpk-check.m4
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/m4/glpk-check.m4	2014-01-14 20:30:57.000000000 -0500
+++ 4ti2-1.6.2/m4/glpk-check.m4	2015-05-03 09:41:28.557795142 -0400
@@ -56,9 +56,9 @@
 		CXXFLAGS="${CXXFLAGS} ${GLPK_CFLAGS}"
 		LIBS="${LIBS} ${GLPK_LIBS_NOLIBTOOL}"
 
-		AC_LINK_IFELSE(AC_LANG_PROGRAM([extern "C" {
+		AC_LINK_IFELSE([AC_LANG_PROGRAM([extern "C" {
 #include <glpk.h>
-}], [glp_prob *lpx = glp_create_prob(); glp_delete_prob(lpx); ]),
+}], [glp_prob *lpx = glp_create_prob(); glp_delete_prob(lpx); ])],
 		[
 				AC_MSG_RESULT(found)
 				AC_SUBST(GLPK_CFLAGS)
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/m4/gmp-check.m4 4ti2-1.6.2/m4/gmp-check.m4
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/m4/gmp-check.m4	2011-12-15 12:10:12.000000000 -0500
+++ 4ti2-1.6.2/m4/gmp-check.m4	2015-05-03 09:41:28.557795142 -0400
@@ -52,11 +52,13 @@
 		LIBS="${LIBS} ${GMP_LIBS}"
 
 		AC_TRY_LINK(
-		[#include <gmp.h>],
+		[#include <stddef.h>
+		 #include <gmp.h>],
 		[mpz_t a; mpz_init (a);],
 		[
         		AC_TRY_RUN(
- 			[#include <gmp.h>
+ 			[#include <stddef.h>
+		 	 #include <gmp.h>
 			 int main () {  if (__GNU_MP_VERSION < 3) return -1; else return 0; }
 		  	],[
 				AC_MSG_RESULT(found)
@@ -66,7 +68,8 @@
 				# See if we are running GMP 4.0
 	   			AC_MSG_CHECKING(whether GMP is 4.0 or greater)
 		   		AC_TRY_RUN(
-		   		[#include <gmp.h>
+		   		[#include <stddef.h>
+		 		 #include <gmp.h>
 	    			int main () { if (__GNU_MP_VERSION < 4) return -1; else return 0; }
 	   			],[
 					gmp_found="yes"
@@ -74,7 +77,8 @@
 					# See if GMP was compiled with --enable-cxx
 					AC_MSG_CHECKING(whether GMP was compiled with --enable-cxx)
 					AC_TRY_RUN(
-					[#include <gmpxx.h>
+					[#include <stddef.h>
+		 			 #include <gmpxx.h>
 					int main () { mpz_class a(2),b(3),c(5); if ( a+b == c ) return 0; else return -1; }
 					],[
 						AC_MSG_RESULT(yes)
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/4ti2/4ti2.h 4ti2-1.6.2/src/4ti2/4ti2.h
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/4ti2/4ti2.h	2013-07-28 20:11:58.000000000 -0400
+++ 4ti2-1.6.2/src/4ti2/4ti2.h	2015-05-03 09:41:28.557795142 -0400
@@ -28,6 +28,7 @@
 #include "4ti2/4ti2_config.h"
 
 #ifdef _4ti2_HAVE_GMP
+#include <stddef.h>
 #include <gmp.h>
 #endif
 
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/4ti2/4ti2xx.h 4ti2-1.6.2/src/4ti2/4ti2xx.h
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/4ti2/4ti2xx.h	2013-07-28 20:14:08.000000000 -0400
+++ 4ti2-1.6.2/src/4ti2/4ti2xx.h	2015-05-03 09:41:28.557795142 -0400
@@ -28,7 +28,15 @@
 #include "4ti2/4ti2_config.h"
 
 #ifdef _4ti2_HAVE_GMP
+#include <stddef.h>
 #include <gmp.h>
+
+#ifdef LLONG_MAX
+#if LLONG_MAX == LONG_MAX
+/* #define MPIRXX_HAVE_LLONG 1 */
+#endif
+#endif
+
 #include <gmpxx.h>
 #endif
 
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/groebner/DataType.h 4ti2-1.6.2/src/groebner/DataType.h
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/groebner/DataType.h	2013-07-28 20:01:01.000000000 -0400
+++ 4ti2-1.6.2/src/groebner/DataType.h	2015-05-03 09:41:28.561795143 -0400
@@ -28,6 +28,7 @@
 
 #ifdef _4ti2_GMP_
 
+#include <stddef.h>
 #include <gmp.h>
 #include <gmpxx.h>
 typedef mpz_class IntegerType;
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/groebner/VectorArrayAPI.h 4ti2-1.6.2/src/groebner/VectorArrayAPI.h
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/groebner/VectorArrayAPI.h	2013-07-28 20:11:58.000000000 -0400
+++ 4ti2-1.6.2/src/groebner/VectorArrayAPI.h	2015-05-03 13:29:37.822597445 -0400
@@ -136,17 +136,19 @@
     }
     v2 = v1.get_si();
 }
- 
-#ifndef _4ti2_HAVE_MPZ_INT64_CONVERSION
+
 template <>
 inline
 void
-VectorArrayAPI::convert(const mpz_class& v1, _4ti2_int64_t& v2)
+VectorArrayAPI::convert(const mpz_class& v1, long long int& v2)
 {
-  std::cerr << "UNIMPLEMENTED: Need to convert from mpz to _4ti2_int64_t" << std::endl;
-  exit(1);
+    if (!v1.fits_slong_p()) {
+        std::cerr << "ERROR: number " << v1 << " out of range.\n";
+        std::cerr << "ERROR: range is (" << LONG_MIN << "," << LONG_MAX << ").\n";
+        exit(1);    
+    }
+    v2 = v1.get_si();
 }
-#endif
 
 #endif
 
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/zsolve/VectorArrayAPI.hpp 4ti2-1.6.2/src/zsolve/VectorArrayAPI.hpp
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/src/zsolve/VectorArrayAPI.hpp	2013-07-28 20:11:58.000000000 -0400
+++ 4ti2-1.6.2/src/zsolve/VectorArrayAPI.hpp	2015-05-03 13:33:44.430602404 -0400
@@ -108,25 +108,17 @@
     v2 = v1.get_si();
 }
 
-#ifndef _4ti2_HAVE_MPZ_INT64_CONVERSION
 template <>
 inline
 void
-convert(const mpz_class& v1, _4ti2_int64_t& v2)
+convert(const mpz_class& v1, long long int& v2)
 {
-  std::cerr << "UNIMPLEMENTED: Need to convert from mpz to _4ti2_int64_t" << std::endl;
-  std::exit(1);
-}
-
-template <>
-inline
-void
-convert(const _4ti2_int64_t& v1, mpz_class &v2)
-{
-  std::cerr << "UNIMPLEMENTED: Need to convert from _4ti2_int64_t to mpz" << std::endl;
-  std::exit(1);
+    // TODO: Better precision exception information.
+    if (!v1.fits_slong_p()) {
+        throw PrecisionException(0);
+    }
+    v2 = v1.get_si();
 }
-#endif
 
 #endif
 
diff -ur /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/test/qsolve/api/test_input_conversion_gmp.cpp 4ti2-1.6.2/test/qsolve/api/test_input_conversion_gmp.cpp
--- /home/dan/src/M2/M2/BUILD/dan/builds.tmp/linux32.generic.production/libraries/4ti2/tmp/4ti2-1.6.2/test/qsolve/api/test_input_conversion_gmp.cpp	2009-03-16 17:00:17.000000000 -0400
+++ 4ti2-1.6.2/test/qsolve/api/test_input_conversion_gmp.cpp	2015-05-03 09:41:28.561795143 -0400
@@ -27,6 +27,7 @@
 
 #include "4ti2/4ti2.h"
 #include "4ti2/4ti2xx.h"
+#include <stddef.h>
 #include <gmpxx.h>
 
 using namespace std;
